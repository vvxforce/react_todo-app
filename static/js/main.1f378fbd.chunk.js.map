{"version":3,"sources":["NewTodo.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["NewTodo","state","inputValue","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","addNewTodo","react_default","a","createElement","onSubmit","this","onChange","placeholder","React","Component","TodoItem","handleTodoStatus","changeTodoStatus","todo","id","checked","handleClick","todoId","deleteTodo","_this2","title","completed","key","className","type","htmlFor","onClick","TodoList","_ref","todos","map","item","src_TodoItem","App","selectedFilter","newTodo","trim","concat","Object","toConsumableArray","Date","status","objectSpread2","changeAllStatuses","filter","clearAllCompletedTodos","visibleTodos","src_NewTodo","length","style","display","every","src_TodoList","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1f378fbd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addNewTodo(this.state.inputValue);\n\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  handleTodoStatus = (event) => {\n    this.props.changeTodoStatus(this.props.todo.id, event.target.checked);\n  };\n\n  handleClick = (todoId) => {\n    this.props.deleteTodo(todoId);\n  };\n\n  render() {\n    const { todo } = this.props;\n    const { id, title, completed } = todo;\n\n    return (\n      <li key={id} className={completed && 'completed'}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={this.handleTodoStatus}\n          />\n          <label htmlFor=\"label\">{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => this.handleClick(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos, changeTodoStatus, deleteTodo }) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(item => (\n        <TodoItem\n          todo={item}\n          changeTodoStatus={changeTodoStatus}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport NewTodo from './NewTodo';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedFilter: 'All',\n  };\n\n  addNewTodo = (newTodo) => {\n    if (newTodo.trim() === '') {\n      return;\n    }\n\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: +new Date(),\n          title: newTodo,\n          completed: false,\n        },\n      ],\n    }));\n  };\n\n  changeTodoStatus = (todoId, status) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id !== todoId) {\n          return item;\n        }\n\n        return {\n          ...item,\n          completed: status,\n        };\n      }),\n    }));\n  };\n\n  changeAllStatuses = (event) => {\n    const status = event.target.checked;\n\n    this.setState(state => ({\n      todos: state.todos.map(item => ({\n        ...item,\n        completed: status,\n      })),\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== todoId),\n    }));\n  };\n\n  clearAllCompletedTodos = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.completed === false),\n    }));\n  };\n\n  visibleTodos = (todo) => {\n    switch (this.state.selectedFilter) {\n      case 'All':\n        return true;\n      case 'isActive':\n        return todo.completed === false;\n      case 'Completed':\n        return todo.completed === true;\n      default:\n        return true;\n    }\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section>\n        <header>\n          <h1>todos</h1>\n          <NewTodo addNewTodo={this.addNewTodo} />\n        </header>\n\n        {(todos.length > 0) && (\n          <section style={{ display: 'block' }}>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              checked={todos.every(todo => todo.completed)}\n              onChange={this.changeAllStatuses}\n            />\n\n            <TodoList\n              todos={todos.filter(this.visibleTodos)}\n              changeTodoStatus={this.changeTodoStatus}\n              deleteTodo={this.deleteTodo}\n            />\n\n          </section>\n        )}\n\n        {(todos.length > 0) && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <span className=\"todo-count\">\n              {todos.filter(item => !item.completed).length}\n              {' '}\n              items left\n            </span>\n\n            {todos.some(item => item.completed === true) && (\n              <button\n                type=\"button\"\n                style={{ display: 'block' }}\n                onClick={this.clearAllCompletedTodos}\n              >\n                Clear completed\n              </button>\n            )}\n\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}